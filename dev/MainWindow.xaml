<?xml version="1.0" encoding="utf-8" ?>
<Window x:Class="RainbowFrame.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="using:CommunityToolkit.WinUI.Controls"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:dev="using:DevWinUI"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tb="using:H.NotifyIcon"
        xmlns:views="using:RainbowFrame.Views"
        mc:Ignorable="d">
    <Grid Loaded="Grid_Loaded">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <TitleBar x:Name="AppTitleBar"
                  Title="{x:Bind dev:ProcessInfoHelper.ProductName}"
                  IconSource="{dev:BitmapIconSource Source=ms-appx:///Assets/icon.png}"
                  IsBackButtonVisible="False"
                  IsPaneToggleButtonVisible="False"
                  Subtitle="{x:Bind dev:ProcessInfoHelper.VersionWithPrefix}">
            <AutoSuggestBox x:Name="HeaderAutoSuggestBox"
                            MinWidth="320"
                            VerticalAlignment="Center"
                            PlaceholderText="Search"
                            QueryIcon="Find"
                            QuerySubmitted="OnQuerySubmitted"
                            TextChanged="OnTextChanged">
                <AutoSuggestBox.KeyboardAccelerators>
                    <KeyboardAccelerator Key="F"
                                         Invoked="KeyboardAccelerator_Invoked"
                                         Modifiers="Control" />
                </AutoSuggestBox.KeyboardAccelerators>
            </AutoSuggestBox>
            <TitleBar.RightHeader>
                <Button x:Name="ThemeButton"
                        Height="32"
                        Margin="0,0,4,0"
                        Click="ThemeButton_Click"
                        Content="{dev:FontIcon GlyphCode=E793,
                                               FontSize=16}"
                        Style="{ThemeResource SubtleButtonStyle}"
                        ToolTipService.ToolTip="Toggle Theme" />
            </TitleBar.RightHeader>
        </TitleBar>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2"
                    Margin="10"
                    HorizontalAlignment="Stretch"
                    CornerRadius="{ThemeResource OverlayCornerRadius}">
                <controls:Ribbon>
                    <controls:RibbonCollapsibleGroup AccessKey="H"
                                                     CollapsedAccessKey="HH"
                                                     Label="Home"
                                                     Style="{StaticResource RibbonLeftCollapsibleGroupStyle}">
                        <controls:RibbonCollapsibleGroup.IconSource>
                            <SymbolIconSource Symbol="Home" />
                        </controls:RibbonCollapsibleGroup.IconSource>
                        <StackPanel Orientation="Horizontal"
                                    Spacing="10">
                            <AppBarButton x:Name="btnRefresh"
                                          Command="{x:Bind ViewModel.RefreshCommand}"
                                          Icon="Refresh"
                                          Label="Refresh"
                                          ToolTipService.ToolTip="Refresh Windows List" />
                            <AppBarToggleButton Command="{x:Bind ViewModel.AllWindowToggledCommand}"
                                                Icon="ViewAll"
                                                IsChecked="{x:Bind ViewModel.IsAllWindowToggled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                Label="View All"
                                                ToolTipService.ToolTip="Show All Windows (Event Without Title)" />
                        </StackPanel>
                    </controls:RibbonCollapsibleGroup>
                    <controls:RibbonGroup Label="Options"
                                          Style="{StaticResource RibbonRightGroupStyle}">
                        <StackPanel Orientation="Horizontal"
                                    Spacing="10">
                            <AppBarButton Command="{x:Bind ViewModel.SettingsCommand}"
                                          CommandParameter="GeneralSettingPage"
                                          Icon="Setting"
                                          Label="General"
                                          ToolTipService.ToolTip="Change your app Settings" />
                            <AppBarButton Command="{x:Bind ViewModel.SettingsCommand}"
                                          CommandParameter="ThemeSettingPage"
                                          Icon="{dev:FontIcon GlyphName=Color}"
                                          Label="Theme" />
                            <AppBarButton Command="{x:Bind ViewModel.SettingsCommand}"
                                          CommandParameter="AppUpdateSettingPage"
                                          Icon="{dev:FontIcon GlyphName=DevUpdate}"
                                          Label="Update" />
                            <AppBarButton Command="{x:Bind ViewModel.SettingsCommand}"
                                          CommandParameter="AboutUsSettingPage"
                                          Icon="{dev:FontIcon GlyphName=Info}"
                                          Label="About us" />
                        </StackPanel>
                    </controls:RibbonGroup>
                </controls:Ribbon>
            </Border>

            <ListView x:Name="listView"
                      Grid.Row="1"
                      ItemsSource="{x:Bind ViewModel.Windows, Mode=OneWay}"
                      SelectedItem="{x:Bind ViewModel.SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectionChanged="listView_SelectionChanged">
                <ListView.Header>
                    <controls:DataTable Margin="12,0,0,0">
                        <controls:DataColumn MinWidth="100">
                            <TextBlock FontWeight="SemiBold"
                                       Text="HWND" />
                        </controls:DataColumn>
                        <controls:DataColumn CanResize="True"
                                             Content="Title"
                                             DesiredWidth="*" />
                    </controls:DataTable>
                </ListView.Header>
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="dev:Win32Window">
                        <controls:DataRow>
                            <TextBlock VerticalAlignment="Center"
                                       Text="{x:Bind Handle}" />
                            <TextBlock VerticalAlignment="Center"
                                       Text="{x:Bind Text}" />
                        </controls:DataRow>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemContainerStyle>
                    <Style BasedOn="{StaticResource DefaultListViewItemStyle}"
                           TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <controls:GridSplitter Grid.Row="1"
                                   Grid.Column="1"
                                   Width="16"
                                   HorizontalAlignment="Left"
                                   ResizeBehavior="BasedOnAlignment"
                                   ResizeDirection="Auto">
                <controls:GridSplitter.RenderTransform>
                    <TranslateTransform X="-7" />
                </controls:GridSplitter.RenderTransform>
            </controls:GridSplitter>
            <Grid Grid.Row="1"
                  Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel Margin="10,10,10,0">
                    <dev:SettingsExpander Description="Activating this feature creates a dynamic rainbow effect on all visible windows, adding a vibrant touch of color to your experience."
                                          Header="Rainbow Effect for All Windows"
                                          HeaderIcon="{dev:BitmapIcon Source=ms-appx:///Assets/Fluent/StartStop.png}">
                        <ToggleSwitch x:Name="TGRainbowEffectForAllWindow"
                                      IsOn="{x:Bind ViewModel.UseRainbowEffectForAllWindow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      Toggled="OnRainbowEffectForAllWindow_Toggled" />
                        <dev:SettingsExpander.Items>
                            <dev:SettingsCard Description="Customize the pace of the rainbow effect, allowing you to choose between a calm, slow or a fast, energetic color transition."
                                              Header="Adjust Rainbow Effect Speed"
                                              HeaderIcon="{dev:BitmapIcon Source=ms-appx:///Assets/Fluent/Speed.png}">
                                <NumberBox Maximum="10"
                                           Minimum="1"
                                           SpinButtonPlacementMode="Inline"
                                           ValueChanged="NumberBoxAll_ValueChanged"
                                           Value="{x:Bind ViewModel.RainbowEffectSpeedAll, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </dev:SettingsCard>
                        </dev:SettingsExpander.Items>
                    </dev:SettingsExpander>
                    <dev:SettingsCard Description="Instantly remove the rainbow effect from all windows."
                                      Header="Reset Rainbow Effect for All Windows"
                                      HeaderIcon="{dev:BitmapIcon Source=ms-appx:///Assets/Fluent/Reset.png}">
                        <Button MinWidth="100"
                                Command="{x:Bind ViewModel.ResetAllCommand}"
                                Content="Reset All" />
                    </dev:SettingsCard>
                </StackPanel>
                <Frame x:Name="MainFrame"
                       Grid.Row="1" />
            </Grid>
        </Grid>
        <tb:TaskbarIcon DoubleClickCommand="{x:Bind ViewModel.ShowHideWindowCommand}"
                        IconSource="ms-appx:///Assets/icon.ico"
                        MenuActivation="LeftOrRightClick"
                        PopupActivation="DoubleClick"
                        ToolTipText="RainbowFrame">
            <tb:TaskbarIcon.ContextFlyout>
                <MenuFlyout AreOpenCloseAnimationsEnabled="False">
                    <MenuFlyoutItem Command="{x:Bind ViewModel.ShowHideWindowCommand}"
                                    Text="Show/Hide RainbowFrame" />
                    <MenuFlyoutSeparator />
                    <MenuFlyoutItem Command="{x:Bind ViewModel.ExitCommand}"
                                    Text="Exit" />
                </MenuFlyout>
            </tb:TaskbarIcon.ContextFlyout>
        </tb:TaskbarIcon>
    </Grid>
</Window>

